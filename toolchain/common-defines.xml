<xml>
 <flag value="-DHXCPP_DEBUG" if="debug" />
 <flag value="-DSTATIC_LINK" if="static_link" tag="static" />
 <flag value="-DHXCPP_EXE_LINK" if="exe_link" tag="static" />
 <flag value="-DHXCPP_ARM64" if="HXCPP_ARM64"/>
 <flag value="-DHXCPP_ARMV7" if="HXCPP_ARMV7"/>
 <flag value="-DHXCPP_M64" if="HXCPP_M64||HXCPP_ARM64"/>
 <!-- TiVo turns off HXCPP_VISIT_ALLOCS, which is not needed and only
      expands the size of executables unnecessarily -->
 <!-- <flag value="-DHXCPP_VISIT_ALLOCS" /> -->
 <flag value="-Dhaxe_210" if="haxe_210" tag="haxe" />
 <flag value="-DUSE_STD_MAP" if="USE_STD_MAP" />
 <flag value="-DHXCPP_MULTI_THREADED" if="HXCPP_MULTI_THREADED" />
 <flag value="-DHXCPP_FLOAT32" if="HXCPP_FLOAT32" tag="haxe" />
 <flag value="-DHXCPP_CHECK_POINTER" if="HXCPP_CHECK_POINTER" tag="haxe" />
 <flag value="-DHXCPP_STACK_TRACE" if="HXCPP_STACK_TRACE" tag="haxe" />
 <flag value="-DUSE_STD_MAP" if="USE_STD_MAP"/>
 <flag value="-DHXCPP_TELEMETRY" if="HXCPP_TELEMETRY" tag="haxe" />
 <flag value="-DHXCPP_PROFILER" if="HXCPP_PROFILER" tag="haxe" />
 <flag value="-DHXCPP_PROFILE_EXTERNS" if="HXCPP_PROFILE_EXTERNS" tag="debug" />
 <flag value="-DHXCPP_STACK_LINE" if="HXCPP_STACK_LINE" tag="haxe" />
 <flag value="-DHXCPP_STACK_VARS" if="HXCPP_STACK_VARS" tag="haxe" />
 <flag value="-DHXCPP_DEBUGGER" if="HXCPP_DEBUGGER" tag="haxe" />
 <flag value="-DHXCPP_PARANOID" if="HXCPP_PARANOID" tag="haxe" />
 <flag value="-DHXCPP_GC_MOVING" if="HXCPP_GC_MOVING" tag="gc" />
 <flag value="-DHXCPP_GC_BIG_BLOCKS" if="HXCPP_GC_BIG_BLOCKS" tag="gc" />
 <flag value="-DHXCPP_GC_SUMMARY" if="HXCPP_GC_SUMMARY" tag="gc" />
 <flag value="-DHXCPP_GC_DYNAMIC_SIZE" if="HXCPP_GC_DYNAMIC_SIZE" tag="gc" />
 <flag value="-DHXCPP_GC_CHECK_POINTER" if="HXCPP_GC_CHECK_POINTER" tag="haxe" />
 <flag value="-DHXCPP_GC_DEBUG_ALWAYS_MOVE" if="HXCPP_GC_DEBUG_ALWAYS_MOVE" tag="haxe" />
 <flag value="-DHXCPP_GC_GENERATIONAL" if="HXCPP_GC_GENERATIONAL" tag="haxe" />
 <flag value="-DHXCPP_GC_NURSERY" if="HXCPP_GC_NURSERY" tag="haxe" />
 <flag value="-DHXCPP_DLL_IMPORT" if="dll_import" tag="haxe" />
 <flag value="-I${dll_import_include}" if="dll_import_include" tag="haxe" />
 <flag value="-DHXCPP_DLL_EXPORT" if="dll_export||dll_link" tag="haxe" />
 <flag value="-DHXCPP_SCRIPTABLE" if="scriptable" tag="haxe" />
 <flag value="-DHXCPP_STRICT_CASTS" if="HXCPP_STRICT_CASTS" tag="haxe" />
 <flag value='-DHXCPP_DEBUG_HOST="${HXCPP_DEBUG_HOST}"' if="HXCPP_DEBUG_HOST" tag="debug" />
 <flag value='-DHX_SMART_STRINGS' if="hxcpp_smart_strings" tag="haxe" />
 <flag value='-DHXCPP_API_LEVEL=${removeQuotes:hxcpp_api_level}' if="hxcpp_api_level" tag="haxe" />
 <flag value='-DHXCPP_API_LEVEL=0' unless="hxcpp_api_level"  tag="haxe"/>
 <flag value='-DHXCPP_OBJC' if="objc"  tag="haxe"/>
 <flag value='-DHXCPP_GC_DEBUG_LEVEL=${HXCPP_GC_DEBUG_LEVEL}' if="HXCPP_GC_DEBUG_LEVEL" tag="gc" />
 <!-- set -D_TIVO_ for all TiVo builds, allows C++ code to include
      #ifdef _TIVO_ for TiVo-specific customizations -->
 <flag value="-D_TIVO_" if="tivo" />
 <!-- special TiVo hack flag for counting function calls -->
 <flag value="-DTIVOCONFIG_COLLECT_FUNCTION_CALLS" if="TIVOCONFIG_COLLECT_FUNCTION_CALLS" />
 <mmflag value='-Wno-invalid-offsetof' />
 <mmflag value='-Wno-format-security' />
</xml>
